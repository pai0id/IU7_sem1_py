# Поляков Андрей Игоревич ИУ7-12Б
#
# Программа для вычисления суммы ряда с точностью до члена ряда е и построения таблицы значений.
# Ряд: y = 2/5 + 1/2*(2/5)^2 + 1/3*(2/5)^3 ... 1/n*(2/5)^n ...

MARKER = "-"  # Маркер для построения таблицы
precision = float(input("Введите точность: "))  # Ввод точности
max_iterations = int(input("Максимальное количество итераций: "))  # Ввод максимального количества итераций
step = float(input("Шаг: "))  # Ввод шага

n = 1  # Первая итерация
s = 0.4  # Сумма
curr_x = 0.4  # Начальное значение х
str_curr_x = f"{curr_x:.5g}"  # Строки х и суммы для вывода
str_s = f"{s:.5g}"
print(f"{MARKER * 40}\n| № Итерации |{'t'.center(12)}|{'s'.center(12)}|\n{MARKER * 40}")  # Вывод легенды
print(f"|{str(n).center(12)}|{str_curr_x.center(12)}|{str_s.center(12)}|")  # Вывод первой итерации
while n < max_iterations:  # Перебор значений последовательности
    n += 1  # Обновление номера итерации
    curr_x = curr_x * (n-1) / n * 0.4  # Обновление текущего значения
    if abs(curr_x) < precision:  # Проверка х
        n -= 1
        break
    s += curr_x  # Обновление суммы
    str_curr_x = f"{curr_x:.5g}"  # Строки текущего значения и суммы для вывода
    str_s = f"{s:.5g}"
    if (n - 1) % step == 0:  # Пошаговый вывод итераций
        print(f"|{str(n).center(12)}|{str_curr_x.center(12)}|{str_s.center(12)}|")
print(f"{MARKER * 40}")  # Закрытие таблицы

# Вывод итоговой суммы и количества итераций
if n >= max_iterations:  # Слишком много итераций
    print(f"Количество итераций превысило максимальное возможное.")
else:
    print(f"Сумма бесконечного ряда - {s:.5g}, вычислена за {n} итераций.")
